import { JObject, PromiseVerifyFn } from "./UtilInterfaces";
/**网络工具 */
export declare namespace UtilCom {
    /**发送一个 https POST请求并接受数据
     * Object ()
     * @async
     * @param {JObject} json 	   - 数据对象
     * @param {Object} options     - 参数对象
     * @param {number} [timeLimit] - 超时时间/秒  最小为10秒
     * @returns {Promise<JObject|null>} 结果 null 为未能成功接收
     */
    function shttpsPost(json: JObject, options: Object, timeLimit?: number): Promise<JObject | null>;
    /**发送一个 http POST请求并接受数据
     * Object ()
     * @async
     * @param {JObject} json 	   - 数据对象
     * @param {Object} options     - 参数对象
     * @param {number} [timeLimit] - 超时时间/秒  最小为10秒
     * @returns {Promise<JObject|null>} 结果 null 为未能成功接收
     */
    function shttpPost(json: JObject, options: Object, timeLimit?: number): Promise<JObject | null>;
    /**重复一个 https POST请求并接受数据
     * Object ()
     * @async
     * @param {JObject} json 	        - 数据对象
     * @param {Object} options          - 参数对象
     * @param {number} [timeLimit]      - 超时时间/秒  最小为10秒
     * @param {number} [repeatCount]    - 重试次数
     * @param {number} [repeatTime]     - 超时时间/秒  最小为10秒
     * @param {PromiseVerifyFn<JObject|null>} [verifyFn]     - 判断有效性函数
     * @returns {Promise<JObject|null>}  - 结果 null 为未能成功接收
     */
    function shttpsRepeatPost(json: JObject, options: Object, timeLimit?: number, repeatCount?: number, repeatTime?: number, verifyFn?: PromiseVerifyFn<JObject | null>): Promise<JObject | null>;
    /**重复一个 http POST请求并接受数据
     * Object ()
     * @async
     * @param {JObject} json 	        - 数据对象
     * @param {Object} options          - 参数对象
     * @param {number} [timeLimit]      - 超时时间/秒  最小为10秒
     * @param {number} [repeatCount]    - 重试次数
     * @param {number} [repeatTime]     - 超时时间/秒  最小为10秒
     * @param {PromiseVerifyFn<JObject|null>} [verifyFn]     - 判断有效性函数
     * @returns {Promise<JObject|null>}  - 结果 null 为未能成功接收
     */
    function shttpRepeatPost(json: JObject, options: Object, timeLimit?: number, repeatCount?: number, repeatTime?: number, verifyFn?: PromiseVerifyFn<JObject | null>): Promise<JObject | null>;
}
